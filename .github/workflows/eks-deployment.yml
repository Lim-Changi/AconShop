name: Deploy EKS
on:
  push:
    branches:
      - deploy/k8s

jobs:
  deploy-k8s:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
          NODE_ENV: development
          PORT: ${{ secrets.PORT }}
          SWAGGER_ADMIN: ${{ secrets.SWAGGER_ADMIN }}
          SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SYNCHRONIZE: ${{ secrets.SYNCHRONIZE }}
          LOGGING: ${{ secrets.LOGGING }}
          DB_CONNECTION_TIMEOUT: ${{ secrets.DB_CONNECTION_TIMEOUT }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: KubeConfig
        run: |
          aws eks update-kubeconfig --name test-cluster --region ${{ env.AWS_REGION }}  --kubeconfig ./kubeconfig
          echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
          echo $(cat ./kubeconfig | base64) >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV   

      - name: EKS Deployment
        uses: koslib/helm-eks-action@v1.28.0
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
        with:
          command: |
            helm version
            kubectl version
            kubectl cluster-info 
            helm upgrade acon-k8s --install --wait --set image.tag=${{ github.sha }} --set image.repository="$ECR_REGISTRY/ECR_REPOSITORY" --set service.port="8000" .devops/k8s/acon-k8s -n default

      - name: Success
        run: echo deployed successfully.

