name: Integration Test
on:
  pull_request:
    branches:
      - main
      
jobs:
  ci:
    runs-on: ubuntu-latest
    container: node:16-alpine
    env:
      NODE_ENV: CI
      PORT: ${{ secrets.PORT }} 
      SWAGGER_ADMIN: ${{ secrets.SWAGGER_ADMIN }} 
      SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }} 
      DB_HOST: ${{ secrets.DB_HOST }} 
      DB_PORT: ${{ secrets.DB_PORT }} 
      DB_NAME: ${{ secrets.DB_NAME }} 
      DB_USERNAME: ${{ secrets.DB_USERNAME }} 
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }} 
      SYNCHRONIZE: ${{ secrets.SYNCHRONIZE }} 
      LOGGING: ${{ secrets.LOGGING }}
      DB_LOCAL_HOST: ${{ secrets.DB_LOCAL_HOST }} 
      DB_LOCAL_PORT: ${{ secrets.DB_LOCAL_PORT }}
      DB_LOCAL_NAME: ${{ secrets.DB_LOCAL_NAME }} 
      DB_LOCAL_USERNAME: ${{ secrets.DB_LOCAL_USERNAME }} 
      DB_LOCAL_PASSWORD: ${{ secrets.DB_LOCAL_PASSWORD }} 
      LOCAL_SYNCHRONIZE: ${{ secrets.LOCAL_SYNCHRONIZE }} 
      LOCAL_LOGGING: ${{ secrets.LOCAL_LOGGING }} 
      DB_CONNECTION_TIMEOUT: ${{ secrets.DB_CONNECTION_TIMEOUT }} 
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }} 
      
      

    # 서비스 아래의 rdb, cache 값은 다른 값으로 설정 가능하며 해당 서비스의 DOMAIN NAME 으로 사용됩니다.
    # 모든 설정 방법은 docker 설정과 일치합니다. 에를 들어 port 값은 좌측은 외부 port 우측은 포워딩 되는 내부 포트입니다.
    services:
      rdb:
        image: bitnami/mysql:8.0.20
        env:
          MYSQL_ROOT_PASSWORD: aconpassword
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306/tcp
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      
    steps:
      # 아래의 명령문들이 테스트를 하기 위한 설정 및 실행들 입니다. run 하나가 Linux 에서의 명령문입니다.
      - name: Checkout source code
        uses: actions/checkout@master

      - name: Install RDB Dependencies
        run: apk add mysql-client

      - name: Initialize RDB MySQL
        run: mysql -h rdb -u root -paconpassword < .github/scripts/test_db_init.sql

      - name: Setup Node Environment
        run: npm ci
      
      - name: Test with DB
        run: npx jest --detectOpenHandles --forceExit

      - name: Success
        run: echo Test Completed Successfully.
